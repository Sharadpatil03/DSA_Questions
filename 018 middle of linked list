
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {

        // brute force: tc: o(n + n/2)
        // int cnt=0;
        // ListNode* temp=head;
        // while(temp!=nullptr){
        //     cnt++;
        //     temp=temp->next;
        // }

        // int mid=(cnt/2)+1;
        // cnt=0;
        // temp=head;
        // while(temp!=nullptr){
        //     cnt++;

        //     if(cnt==mid){
        //         break;
        //     }
        //     temp=temp->next;
        // }
        // return temp;
      

      // optimal sol: slow and fast pointer(tortoise and hare algorithm). tc: o(n/2)
      
       ListNode* slow=head;
       ListNode*fast=head;

       while( fast!=nullptr && fast->next!=nullptr){
         slow=slow->next;
         fast=fast->next->next;

       }

       // reached at end
       return slow;
        
    }
};
