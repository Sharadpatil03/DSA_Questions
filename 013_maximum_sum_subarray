Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.
Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        
        // brute force:
        // int n=nums.size();
        // int maxSum=0;
        // for(int i=0; i<n; i++){
        //     int sum=0;

        //     for(int j=i; j<n; j++){
        //         sum+=nums[j];

        //         // update
        //         if( sum >maxSum){
        //             maxSum=sum;
        //         }
        //     }
        // }

        // if( maxSum <0){
        //     maxSum=0;
        // }
        // return maxSum;

        //optimal sol: using kadanes algorithm
        int n=nums.size();
        int maxSum=INT_MIN;
        int sum=0;
        for(int i=0; i<n; i++){
            sum+=nums[i];

            if( sum >maxSum){
                maxSum=sum;
            }

            if( sum < 0){
                sum=0;
            }

        }
        return maxSum;

    }
};
