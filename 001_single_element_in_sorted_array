Given a sorted array arr[] of size N. Find the element that appears only once in the array. All other elements appear exactly twice. 

Example 1:
Input:
N = 11
arr[] = {1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65}
Output: 4
Explanation: 4 is the only element that 
appears exactly once.


class Solution
{
  public:
    int findOnce(int arr[], int n)
    {
        // brute force:
        // unordered_map<int, int>mp;
        
        // for(int i=0; i<n; i++){
        //     mp[arr[i]]++;
        // }
        
        // for(const auto& it: mp){
        //     if(it.second==1){
        //         return it.first;
        //     }
        // }
        // return -1;


        // optimal sol : using xor
        int ans=0;
        for(int i=0; i<n; i++){
            ans=arr[i]^ ans;
        }
        
        return ans;
    }
};

