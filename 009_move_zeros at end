

#include <bits/stdc++.h>
using namespace std;
// Move zeros at the end
vector<int> pushZerosToEnd( vector<int>&arr, int n){
    // better solution:
    // int cnt=0;
    // for(int i=0; i<n; i++){
    //     if(arr[i]!=0){
    //         arr[cnt]=arr[i];
    //         cnt++;
    //     }
    // }
    // while( cnt < n){
    //     arr[cnt++]=0;  // fill remaining zeros.
    // }
    
    // optimal sol: using two pointer
     int j=-1; //first task is to find the first 0
     for(int i=0; i<n; i++){
         if(arr[i]==0){
             j=i;
             break;
         }
     }
     
     // no non zero found
     if(j==-1){
         return arr;
     }
     
     for(int i=j+1; i<n; i++){
         if(arr[i]!=0){
             swap(arr[i], arr[j]);
             j++;
         }
     }
     return arr;
    
    
}
int main() {
    
  vector<int>arr={2,0,2,0,0,1,0,3,0,0};
  int n=arr.size();
  
  pushZerosToEnd(arr, n);
  for(int i=0; i<n; i++){
      cout<< arr[i]<< " ";
  }
  
   

    return 0;
}
